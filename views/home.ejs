<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
  <title>Document</title>
</head>
<body>
  <%- include('./partials/nav.ejs') %>
  Home
  <% if (posts.length > 0) { %>
    <% posts.forEach(post => { %>
      <div class="card">
        <% if (post.img) { %>
          <div class="card-image">
            <figure class="image is-16by9">
              <img src="<%= "postUploads/" + JSON.parse(post.img).filename %>">
            </figure>
          </div>
        <% } %>
        <div class="card-content">
          <div class="content">
            <%= post.title %>
            <br>
          </div>
          <div class="media">
            <div class="media-left">
              <figure class="image is-48x48">
                <img src="https://bulma.io/images/placeholders/96x96.png" alt="Placeholder image">
              </figure>
            </div>
            <div class="media-content">
              <p class="title is-4"><%= post.firstName %></p>
            </div>
            <time datetime=""><%= post.date %></time>
          </div>
          <div class="content">
            <%= post.content %>
          </div>
          <div class="likes">
            <div class="total-likes" id="total-likes-<%= post.id %>"><%= post.total_likes %></div>
            <% if (post.isLiked === 0) { %>
              <button id="like-<%= post.id %>" class="like" onclick="likeOrUnlike('<%= post.id %>', false)"><i class="fa-regular fa-thumbs-up"></i></button>
              <button id="unlike-<%= post.id %>" class="unlike" style="display: none;" onclick="likeOrUnlike('<%= post.id %>', true)"><i class="fa-solid fa-thumbs-up"></i></button>
            <% } else { %>
              <button id="like-<%= post.id %>" class="like" style="display: none;" onclick="likeOrUnlike('<%= post.id %>', false)"><i class="fa-regular fa-thumbs-up"></i></button>
              <button id="unlike-<%= post.id %>" class="unlike" onclick="likeOrUnlike('<%= post.id %>', true)"><i class="fa-solid fa-thumbs-up"></i></button>
            <% } %>
          </div>
        </div>
      </div>
    <%}) %>
  <% } %>
</body>
</html>

<script src="https://kit.fontawesome.com/e006435f50.js" crossorigin="anonymous"></script>
<script>
  const likeUrl = "/api/like-post";
  const unlikeUrl = "/api/unlike-post";

  function likeOrUnlike(postId, isLiked) {
    const data = {
      postId: postId
    };

    const totalLikes = document.querySelector(`#total-likes-${postId}`);
    const currentLikes = parseInt(totalLikes.textContent);
    
    const url = isLiked ? unlikeUrl : likeUrl; // Determine the appropriate URL
    
    fetch(url, {
      method: "POST",
      body: JSON.stringify(data),
      headers: {
        'Content-Type': 'application/json',
      }
    })
    .then(data => {
      // Update the total likes count
      const totalLikes = document.querySelector(`#total-likes-${postId}`);
      totalLikes.textContent = data.total_likes;

      // Toggle between like and unlike buttons
      const likeButton = document.querySelector(`#like-${postId}`);
      const unlikeButton = document.querySelector(`#unlike-${postId}`);

      if (isLiked) {
        likeButton.style.display = "inline-block";
        unlikeButton.style.display = "none";
        totalLikes.textContent = currentLikes - 1;
      } else {
        likeButton.style.display = "none";
        unlikeButton.style.display = "inline-block";
        totalLikes.textContent = currentLikes + 1;
      }
    });
  }

  function likePage(strpostId) {
    const postId = Number(strpostId);
    const data = {
      postId: postId
    };

    fetch(likeUrl, {
      method: "POST",
      body: JSON.stringify(data),
      headers: {
        'Content-Type': 'application/json',
      }
    })
    .then(response => {
      const like = document.querySelector(".like");
    });
  }

  function unlikePage(strpostId) {
    const postId = Number(strpostId);
    const data = {
      postId: postId
    };
    fetch(unlikeUrl, {
      method: "POST",
      body: JSON.stringify(data),
      headers: {
        'Content-Type': 'application/json',
      }
    })
    .then(response => {
      const unlike = document.querySelector(".unlike");
    });
    
  }

  let idleTimer;

  function resetIdleTimer() {
      clearTimeout(idleTimer);
      idleTimer = setTimeout(idle, 10 * 1000); // Logout user after 15 minutes of inactivity
  }

  function idle() {
    console.log("Inactive!");
    
    var logout = document.createElement('form');
    logout.method = 'POST';
    logout.action = '/api/logout';
    document.body.append(logout)
    logout.submit();
  }

  // Event listeners to reset idle timer on user activity
  document.addEventListener('mousemove', resetIdleTimer);
  document.addEventListener('keypress', resetIdleTimer);

  // Initial setup to start the idle timer
  resetIdleTimer();
</script>
